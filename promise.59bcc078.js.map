{"version":3,"sources":["js/promise.js"],"names":["task1","document","querySelector","task1Func","delay","ms","promise","Promise","resolve","reject","setTimeout","loggerTask1","time","console","log","then","addEventListener","task2","task2Func","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","loggerTask2","table","task3","task3Func","randomIntegerFromInterval","makeTransaction","transaction","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":";AAmHC,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjHD,IAAMA,EAAQC,SAASC,cAAc,UAIrC,SAASC,IAEDC,IAAAA,EAAQ,SAAAC,GACLC,OAAAA,QAAU,IAAIC,QAAQ,SAACC,EAASC,GACrCC,OAAAA,WACE,WAAMF,OAAAA,EAAQH,IAAKA,MAKnBM,EAAc,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,SAGxBR,EAAM,KAAMW,KAAKJ,GACjBP,EAAM,KAAMW,KAAKJ,GACjBP,EAAM,MAAMW,KAAKJ,GAjBnBX,EAAMgB,iBAAkB,QAASb,GAuBjC,IAAMc,EAAQhB,SAASC,cAAc,UAIrC,SAASgB,IAEDC,IAAAA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAC3BC,IAAAA,EAAeF,EAASG,IAAI,SAAAC,GAChCA,OAAAA,EAAKP,OAASI,EAAgBG,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCN,QAASM,EAAKN,SAAWM,IAGxD,OAAA,IAAIpB,QAAQ,SAACC,EAASC,GAE3BD,EAAQiB,MAMNG,EAAc,SAAAH,GAAgBZ,OAAAA,QAAQgB,MAAMJ,IAElDH,EAAgBH,EAAO,SAASJ,KAAKa,GACrCN,EAAgBH,EAAO,OAAOJ,KAAKa,GA3BrCX,EAAMD,iBAAkB,QAASE,GAgCjC,IAAMY,EAAQ7B,SAASC,cAAc,UAIrC,SAAS6B,IAEDC,IAIAC,EAAkB,SAACC,GACjB9B,IAL2B+B,EAAKC,EAKhChC,GAL2B+B,EAKO,IALFC,EAKO,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAM7C,OAAA,IAAI5B,QAAQ,SAACC,EAASC,GAE3BC,WAAW,WACU2B,KAAKE,SAAW,GAGjC/B,EAAQ,CAAC0B,EAAYM,GAAIpC,IAGzBK,EAAOyB,EAAYM,KAGpBpC,MAKDqC,EAAa,SAAgB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAdD,EAAc,EAAA,GAAV5B,EAAU,EAAA,GACjCC,QAAQC,IAAmB0B,eAAAA,OAAAA,EAAmB5B,kBAAAA,OAAAA,EAA9C,QAGI8B,EAAW,SAAAF,GACf3B,QAAQ8B,KAAqCH,gCAAAA,OAAAA,EAA7C,+BAGFP,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/B7B,KAAK0B,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/B7B,KAAK0B,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,KAC/B7B,KAAK0B,GACLI,MAAMH,GAETT,EAAgB,CAAEO,GAAI,GAAII,OAAQ,MAC/B7B,KAAK0B,GACLI,MAAMH,GAlDXZ,EAAMd,iBAAkB,QAASe","file":"promise.59bcc078.js","sourceRoot":"..\\src","sourcesContent":["//   // ==================== Task 1\r\n\r\nconst task1 = document.querySelector(\".task1\");\r\n\r\ntask1.addEventListener (\"click\", task1Func)\r\n\r\nfunction task1Func() {\r\n\r\n  const delay = ms => {\r\n    return promise = new Promise((resolve, reject) =>\r\n      setTimeout(\r\n        () => resolve(ms), ms)\r\n\r\n    )\r\n  };\r\n  \r\n  const loggerTask1 = time => console.log(`Resolved after ${time} ms`);\r\n  \r\n  // Вызовы функции для проверки\r\n  delay(2000).then(loggerTask1); // Resolved after 2000ms\r\n  delay(1000).then(loggerTask1); // Resolved after 1000ms\r\n  delay(1500).then(loggerTask1); // Resolved after 1500ms\r\n}\r\n\r\n\r\n// // ==================== Task 2\r\n\r\nconst task2 = document.querySelector(\".task2\");\r\n\r\ntask2.addEventListener (\"click\", task2Func)\r\n\r\nfunction task2Func() {\r\n\r\n  const users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n  \r\n  const toggleUserState = (allUsers, userName) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n  \r\n    return new Promise((resolve, reject) => {\r\n\r\n      resolve(updatedUsers);\r\n\r\n    })\r\n\r\n  };\r\n  \r\n  const loggerTask2 = updatedUsers => console.table(updatedUsers);\r\n  \r\n  toggleUserState(users, 'Mango').then(loggerTask2);\r\n  toggleUserState(users, 'Lux').then(loggerTask2);\r\n  \r\n}\r\n//   // ==================== Task 3\r\n\r\nconst task3 = document.querySelector(\".task3\");\r\n\r\ntask3.addEventListener (\"click\", task3Func)\r\n\r\nfunction task3Func() {\r\n\r\n  const randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  \r\n  const makeTransaction = (transaction) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n  \r\n    return new Promise((resolve, reject) => {\r\n\r\n      setTimeout(() => {\r\n        const canProcess = Math.random() > 0.3;\r\n  \r\n        if (canProcess) {\r\n          resolve([transaction.id, delay]);\r\n        }\r\n        else {\r\n          reject(transaction.id);\r\n        }\r\n        \r\n      }, delay);\r\n\r\n    })\r\n  };\r\n  \r\n  const logSuccess = ([id, time]) => {\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n  };\r\n  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };\r\n  \r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n}"]}